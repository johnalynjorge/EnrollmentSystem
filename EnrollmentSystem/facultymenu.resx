<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABu
        DgAAAk1TRnQBSQFMAgEBBAEAAVABAAFQAQABHgEAAR4BAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAF4
        AwABPAMAAQEBAAEgBQABgAFw/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A
        /wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A
        /wD/AP8A/wD/ALYAIP8DjQHwpAADAgEDAz8BbQNiAdUDpAH1A2YB2gNKAYsDDQESOAADEAEWA0oBjQNv
        AeMDtQH3A14B0AM+AWoDAwEEPAAI/wNQAZtgACD/A40B8KAAAwQBBQNWAbYU/wNoAd0DFwEgMAADGgEk
        A28B4hT/A1UBsAMBAQI4AANmAd8E/wPrAf5gACD/A40B8FQAAwgBCwMrAUIDPgFrA0UBfwNFAX8DPgFr
        AysBQgMIAQssAANAAW8c/wNmAd8DFwEgKAADGgElA28B4xz/Az0BaRQAAwEBAgM6AWADOgFgAzoBYAM6
        AWADOgFgAzoBYAM6AWAEAAMjATMDTgGZDAADWQG/VAAg/wONAfBMAAMoATwDVAGrAzcB9wMQAf8DEAH/
        AxAB/wMQAf8DEAH/AxAB/wM3AfcDVAGrAygBPCQAA2IB1SD/A2gB3gMXASAgAAMZASMDbwHjIP8DXwHR
        EAAk/xQACP8DBwEKUAAg/wONAfBEAAMSARkDVAGuAxAB/wMoAfkDUwGwAzwBZgMlATcDFgEfAxcBIAMl
        ATcDPAFmA1MBsAMoAfkDEAH/A1QBrgMSARkcAAPLAfsk/wNmAd8DFgEfGAADGQEjA28B4iT/A5sB8wwA
        CP8DTgGUKwABARD/UAAg/wONAfBAAAMlATcDVAHnAyQB/QNPAZsDFAEcIAADFAEcA08BmwMkAf0DVAHn
        AyUBNxgAA3cB5ij/A2YB3wMXASAQAAMZASMDbwHiKP8DYwHZDAAE/wOkAfUoAAM1AVUY/0wAIP8DjQHw
        PAADJQE3A0cB8gNKAe4DLgFHMAADLgFHA0oB7gNHAfIDJQE3FAADTAGQLP8DaAHeAxcBIAgAAxkBIwNv
        AeIs/wNKAYoMAAT/A0oBiiwAHP9IACD/A40B8DgAAxIBGQNUAecDSgHuAyABLzgAAyABLwNKAe4DVAHn
        AxIBGRAAAxEBFwNvAeMs/wNmAd8DFwEgAxkBIwNvAeIs/wNoAd4DDQESDAAE/wNKAYowABj/A2AB1EQA
        IP8DjQHwOAADVAGuAyQB/QMuAUdAAAMuAUcDJAH9A1QBrhQAAxoBJQNvAeMs/wNmAd8DbwHiLP8DbAHg
        AxgBIRAABP8DSgGKNAAY/wMOARNAACD/A40B8DQAAygBPAMQAf8DTwGbSAADTwGbAxAB/wMoATwUAAMa
        ASUDbwHjWP8DbAHgAxgBIRQABP8DSgGKOAAY/xQAA0MBdwONAfADjQHwA40B8AONAfADjQHwA40B8AON
        AfADjQHwA40B8AONAfAg/wPrAf4DjQHwA40B8AONAfADjQHwA40B8AONAfADjQHwA40B8AONAfADjQHw
        DAADVAGrAygB+QMUARxIAAMUARwDKAH5A1QBqxgAAxoBJQNvAeNQ/wNsAeADGAEhGAAE/wNKAYo4AANA
        AW8Y/xAAA0YBfnT/CAADCAELAzcB9wNTAbBQAANTAbADNwH3AwgBCxgAAxoBJQNvAeNI/wNsAeADGAEh
        HAAE/wNKAYo8AAPPAfwM/wNWAbMUAANGAX50/wgAAysBQgMQAf8DPAFmUAADPAFmAxAB/wMrAUIcAAMa
        ASUDbwHjQP8DbAHgAxgBISAABP8DSgGKQAAI/wMEAQUEAAM+AWsE/wPPAfwIAANGAX50/wgAAz4BawMQ
        Af8DJQE3UAADJQE3AxAB/wM+AWsgAAMaASUDbwHjOP8DbAHgAxgBISQABP8DSgGKTAADzgH8DP8IAANG
        AX50/wgAA0UBfwMQAf8DFwEgUAADFwEgAxAB/wNFAX8kAAMaASUDbwHjMP8DbAHgAxgBISgABP8DSgGK
        SAAU/wgAA0YBfnT/CAADRQF/AxAB/wMXASBQAAMXASADEAH/A0UBfyQAAxkBIwNvAeIw/wNmAd8DFgEf
        KAAE/wNKAYpIAAMWAR8Q/wgAA0YBfnT/CAADPgFrAxAB/wMlATdQAAMlATcDEAH/Az0BaiAAAxkBIwNv
        AeI4/wNmAd8DFwEgJAAE/wNKAYpQAAOJAe4DBwEKDAADRgF+dP8IAAMrAUIDEAH/AzwBZlAAAzsBZQMQ
        Af8DKgFBHAADGQEjA28B4kD/A2gB3gMXASAgAAT/A0oBimQAA0YBfnT/CAADCAELAzcB9wNTAbBQAAMr
        AUIDVgG4AwcBChgAAxkBIwNvAeJI/wNmAd8DFwEgHAAE/wNKAYqQACD/A40B8DQAA1QBqwMoAfkDFAEc
        bAADGQEjA28B4lD/A2gB3gMXASAYAAT/A0oBipAAIP8DjQHwNAADKAE8AxAB/wNPAZtoAAMZASMDbwHi
        WP8DbAHgAxgBIRQABP8DUQGfAx8BLQMfAS0DHwEtAx8BLQMfAS0wAANKAYwE/0QAIP8DjQHwOAADVAGu
        AyQB/QMuAUc0AAMCAQMDFgEeAygBPAM3AVsDQwF4AxYBHxQAAxkBIwNvAeIs/wNsAeADbwHjLP8DbAHg
        AxgBIRAAIP8DEAEVKAADSgGMBP9EACD/A40B8DgAAxIBGQNUAecDSgHuAyABLzAAAwYBCANbAcgDEAH/
        AxAB/wNHAfIDBgEIEAADEAEVA20B4Sz/A2wB4AMYASEDGgElA28B4yz/A2YB3wMPARQQACD/KAADSgGM
        BP9EACD/A40B8DwAAyUBNwNHAfIDSgHuAy4BRzAAAzoBYgMQAf8DEAH/A1QBqxQAA0wBkCz/A2wB4AMY
        ASEIAAMaASQDbwHjLP8DSQGIEAADAwEEHP8oAANKAYwE/0QAIP8DjQHwQAADJQE3A1QB5wMkAf0DTwGb
        AxQBHCAAAxUBHQNQAZ0DGgH+A1UB6AM0AfgDOAFcFAADZgHfKP8DbAHgAxgBIRAAAxoBJQNvAeMo/wNs
        AeAYABj/KAADSgGMBP9EACD/A40B8EQAAxIBGQNUAa4DEAH/AygB+QNTAbADPAFmAyUBNwMXASADFwEg
        AyUBNwM8AWcDVQGxAyUB+gMQAf8DUwGsAxIBGAM6AWEDDQESFAADvgH5JP8DbAHgAxgBIRgAAxoBJQNv
        AeMk/wOiAfQYAAMDAQQU/ygAA0oBjAT/RAAg/wONAfBMAAMoATwDVAGrAzcB9wMQAf8DEAH/AxAB/wMQ
        Af8DEAH/AxAB/wM0AfYDUwGqAycBOiQAA2EB2CD/A2wB4AMYASEgAAMaASUDbwHjIP8DYAHPIAAQ/ygA
        A2YB2gT/RAAg/wONAfBUAAMIAQsDKwFCAz4BawNFAX8DRQF/Az4BawMqAUEDBwEKLAADQAFwHP8DbAHg
        AxgBISgAAxoBJQNvAeMc/wM+AWogAAMCAQMM/yQAAxQBGwj/RAAg/wONAfCgAAMDAQQDVwG3FP8DZgHf
        AxgBITAAAxoBJQNvAeIU/wNVAbIDAwEEKAA0/0gAA0YBfgNGAX4DRgF+A0YBfgNGAX4DRgF+A0YBfgNG
        AX4DQwF3pAADBAEGA0ABbwNgAdQDugH4A28B4wNKAYsDEAEVOAADEAEVA0wBjwNoAd0DtQH3A2AB1AM/
        AWwDAgEDMAAo/wMZASMgAAFCAU0BPgcAAT4DAAEoAwABeAMAATwDAAEBAQABAQUAAcABAxYAA///AOIA
        Af8B4AEPBP8B+AEPAf8BwAF/Af8BHwH/AQAB/wHgAQ8E/wHwAQcB/wGAAT8B/wEfAf8BAAH/AeABDwL/
        AYABfwHwAQMB/wEAAT4BAQE7Af8BAAH/AeABDwH/Af4BAAEfAfABAQH+AQABPAEBAfEB/wEAAf8B4AEP
        Af8B+AEAAQcB8AEAAfwBAAE4Af8BwQH/AQAB/wHgAQ8B/wHwAX8BgwHwAQABeAEAATkB/wGAAf8BAAH/
        AeABDwH/AeEB/wHhAfABAAEwAQABOQH/AcABfwEAAf8B4AEPAf8BwwH/AvADAAE5Af8B4AE/AQAB/wHg
        AQ8B/wHHAf8C+AMAAXkB/wHwAR8BAAH/AeABDwH/AY8B/wH8AXwDAAH5Af8B+AEfBAABAwGPAf8B/AF+
        AgABAQH5Af8B+AEPBAABAwEfAf8B/gE/AgABAwH5Af8B/AEfBAABAwEfAf8B/gE/AYABAAEHAfkB/wH+
        ASMEAAEDAR8B/wH+AT8BwAEAAQ8B+QL/AcMEAAEDAR8B/wH+AT8B4AEAAR8B+QL/AYMEAAEDAR8B/wH+
        AT8B4AEAAR8B+QL/AYMEAAEDAR8B/wH+AT8BwAEAAQ8B+QL/AecEAAEDAR8B/wH+AT8BgAEAAQcB+QP/
        BAABAwEfAf8B/gE/AgABAwH5A/8BAAH/AeABDwH/AY8C/wH+AgABAQH5A/8BAAH/AeABDwH/AY8C/wH8
        AwAB+AEPAf8BPwEAAf8B4AEPAf8BxwH/AcAB+AMAAXgBAwH/AT8BAAH/AeABDwH/AcMB/wHAAfADAAE8
        AQMB/wE/AQAB/wHgAQ8B/wHhAf8B4QHwAQABMAEAATwBAwH/AT8BAAH/AeABDwH/AfABfwGBAfABAAF4
        AQABPwEDAf8BPwEAAf8B4AEPAf8B+AEAAQEB8AEAAfwBAAE/AQMB/wE/AQAB/wHgAQ8B/wH+AQABHwHw
        AQEB/gEAAT8BwwH/AT8BAAH/AeABDwL/AYABfwHwAQMB/wEAAT8BwwH+AT8BAAH/AeABDwT/AfABBwH/
        AYABPwHwAQABfwEAAf8B4AEPBP8B+AEPAf8BwAF/AfgBAAH/AQAL
</value>
  </data>
</root>