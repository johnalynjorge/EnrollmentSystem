<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABu
        DgAAAk1TRnQBSQFMAgEBBAEAAUABAAFAAQABHgEAAR4BAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAF4
        AwABPAMAAQEBAAEgBQABgAFw/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A
        /wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A
        /wD/AP8A/wD/ALYAIP8DmgHwpAADAgEDAz8BbQNnAdUDsgH1A20B2gNKAYsDDQESOAADEAEWA0oBjQN7
        AeMDwAH3A2IB0AM+AWoDAwEEPAAI/wNQAZtgACD/A5oB8KAAAwQBBQNXAbYU/wNwAd0DFwEgMAADGgEk
        A3kB4hT/A1UBsAMBAQI4AANuAd8E/wPvAf5gACD/A5oB8FQAAwgBCwMrAUIDPgFrA0UBfwNFAX8DPgFr
        AysBQgMIAQssAANAAW8c/wNuAd8DFwEgKAADGgElA3sB4xz/Az0BaRQAAwEBAgM6AWADOgFgAzoBYAM6
        AWADOgFgAzoBYAM6AWAEAAMjATMDTgGZDAADWQG/VAAg/wOaAfBMAAMoATwDVAGrAzUB9wMSAf8DEgH/
        AxIB/wMSAf8DEgH/AxIB/wM1AfcDVAGrAygBPCQAA2cB1SD/A3IB3gMXASAgAAMZASMDewHjIP8DYwHR
        EAAk/xQACP8DBwEKUAAg/wOaAfBEAAMSARkDVAGuAxIB/wMmAfkDUwGwAzwBZgMlATcDFgEfAxcBIAMl
        ATcDPAFmA1MBsAMmAfkDEgH/A1QBrgMSARkcAAPTAfsk/wNuAd8DFgEfGAADGQEjA3kB4iT/A6kB8wwA
        CP8DTgGUKwABARD/UAAg/wOaAfBAAAMlATcDUQHnAyIB/QNPAZsDFAEcIAADFAEcA08BmwMiAf0DUQHn
        AyUBNxgAA4IB5ij/A24B3wMXASAQAAMZASMDeQHiKP8DaQHZDAAE/wOyAfUoAAM1AVUY/0wAIP8DmgHw
        PAADJQE3A0AB8gNGAe4DLgFHMAADLgFHA0YB7gNAAfIDJQE3FAADTAGQLP8DcgHeAxcBIAgAAxkBIwN5
        AeIs/wNKAYoMAAT/A0oBiiwAHP9IACD/A5oB8DgAAxIBGQNRAecDRgHuAyABLzgAAyABLwNGAe4DUQHn
        AxIBGRAAAxEBFwN7AeMs/wNuAd8DFwEgAxkBIwN5AeIs/wNyAd4DDQESDAAE/wNKAYowABj/A2UB1EQA
        IP8DmgHwOAADVAGuAyIB/QMuAUdAAAMuAUcDIgH9A1QBrhQAAxoBJQN7AeMs/wNuAd8DeQHiLP8DdQHg
        AxgBIRAABP8DSgGKNAAY/wMOARNAACD/A5oB8DQAAygBPAMSAf8DTwGbSAADTwGbAxIB/wMoATwUAAMa
        ASUDewHjWP8DdQHgAxgBIRQABP8DSgGKOAAY/xQAA0MBdwOaAfADmgHwA5oB8AOaAfADmgHwA5oB8AOa
        AfADmgHwA5oB8AOaAfAg/wPvAf4DmgHwA5oB8AOaAfADmgHwA5oB8AOaAfADmgHwA5oB8AOaAfADmgHw
        DAADVAGrAyYB+QMUARxIAAMUARwDJgH5A1QBqxgAAxoBJQN7AeNQ/wN1AeADGAEhGAAE/wNKAYo4AANA
        AW8Y/xAAA0YBfnT/CAADCAELAzUB9wNTAbBQAANTAbADNQH3AwgBCxgAAxoBJQN7AeNI/wN1AeADGAEh
        HAAE/wNKAYo8AAPXAfwM/wNWAbMUAANGAX50/wgAAysBQgMSAf8DPAFmUAADPAFmAxIB/wMrAUIcAAMa
        ASUDewHjQP8DdQHgAxgBISAABP8DSgGKQAAI/wMEAQUEAAM+AWsE/wPXAfwIAANGAX50/wgAAz4BawMS
        Af8DJQE3UAADJQE3AxIB/wM+AWsgAAMaASUDewHjOP8DdQHgAxgBISQABP8DSgGKTAAD1gH8DP8IAANG
        AX50/wgAA0UBfwMSAf8DFwEgUAADFwEgAxIB/wNFAX8kAAMaASUDewHjMP8DdQHgAxgBISgABP8DSgGK
        SAAU/wgAA0YBfnT/CAADRQF/AxIB/wMXASBQAAMXASADEgH/A0UBfyQAAxkBIwN5AeIw/wNuAd8DFgEf
        KAAE/wNKAYpIAAMWAR8Q/wgAA0YBfnT/CAADPgFrAxIB/wMlATdQAAMlATcDEgH/Az0BaiAAAxkBIwN5
        AeI4/wNuAd8DFwEgJAAE/wNKAYpQAAOVAe4DBwEKDAADRgF+dP8IAAMrAUIDEgH/AzwBZlAAAzsBZQMS
        Af8DKgFBHAADGQEjA3kB4kD/A3IB3gMXASAgAAT/A0oBimQAA0YBfnT/CAADCAELAzUB9wNTAbBQAAMr
        AUIDVgG4AwcBChgAAxkBIwN5AeJI/wNuAd8DFwEgHAAE/wNKAYqQACD/A5oB8DQAA1QBqwMmAfkDFAEc
        bAADGQEjA3kB4lD/A3IB3gMXASAYAAT/A0oBipAAIP8DmgHwNAADKAE8AxIB/wNPAZtoAAMZASMDeQHi
        WP8DdQHgAxgBIRQABP8DUQGfAx8BLQMfAS0DHwEtAx8BLQMfAS0wAANKAYwE/0QAIP8DmgHwOAADVAGu
        AyIB/QMuAUc0AAMCAQMDFgEeAygBPAM3AVsDQwF4AxYBHxQAAxkBIwN5AeIs/wN1AeADewHjLP8DdQHg
        AxgBIRAAIP8DEAEVKAADSgGMBP9EACD/A5oB8DgAAxIBGQNRAecDRgHuAyABLzAAAwYBCANaAcgDEgH/
        AxIB/wNAAfIDBgEIEAADEAEVA3YB4Sz/A3UB4AMYASEDGgElA3sB4yz/A24B3wMPARQQACD/KAADSgGM
        BP9EACD/A5oB8DwAAyUBNwNAAfIDRgHuAy4BRzAAAzoBYgMSAf8DEgH/A1QBqxQAA0wBkCz/A3UB4AMY
        ASEIAAMaASQDewHjLP8DSQGIEAADAwEEHP8oAANKAYwE/0QAIP8DmgHwQAADJQE3A1EB5wMiAf0DTwGb
        AxQBHCAAAxUBHQNQAZ0DGgH+A08B6AMuAfgDOAFcFAADbgHfKP8DdQHgAxgBIRAAAxoBJQN7AeMo/wN1
        AeAYABj/KAADSgGMBP9EACD/A5oB8EQAAxIBGQNUAa4DEgH/AyYB+QNTAbADPAFmAyUBNwMXASADFwEg
        AyUBNwM8AWcDVQGxAyMB+gMSAf8DUwGsAxIBGAM6AWEDDQESFAADygH5JP8DdQHgAxgBIRgAAxoBJQN7
        AeMk/wOuAfQYAAMDAQQU/ygAA0oBjAT/RAAg/wOaAfBMAAMoATwDVAGrAzUB9wMSAf8DEgH/AxIB/wMS
        Af8DEgH/AxIB/wMyAfYDUwGqAycBOiQAA2cB2CD/A3UB4AMYASEgAAMaASUDewHjIP8DZAHPIAAQ/ygA
        A20B2gT/RAAg/wOaAfBUAAMIAQsDKwFCAz4BawNFAX8DRQF/Az4BawMqAUEDBwEKLAADQAFwHP8DdQHg
        AxgBISgAAxoBJQN7AeMc/wM+AWogAAMCAQMM/yQAAxQBGwj/RAAg/wOaAfCgAAMDAQQDWAG3FP8DbgHf
        AxgBITAAAxoBJQN5AeIU/wNVAbIDAwEEKAA0/0gAA0YBfgNGAX4DRgF+A0YBfgNGAX4DRgF+A0YBfgNG
        AX4DQwF3pAADBAEGA0ABbwNlAdQDwwH4A3sB4wNKAYsDEAEVOAADEAEVA0wBjwNwAd0DwAH3A2UB1AM/
        AWwDAgEDMAAo/wMZASMgAAFCAU0BPgcAAT4DAAEoAwABeAMAATwDAAEBAQABAQUAAcABAxYAA///AOIA
        Af8B4AEPBP8B+AEPAf8BwAF/Af8BHwH/AQAB/wHgAQ8E/wHwAQcB/wGAAT8B/wEfAf8BAAH/AeABDwL/
        AYABfwHwAQMB/wEAAT4BAQE7Af8BAAH/AeABDwH/Af4BAAEfAfABAQH+AQABPAEBAfEB/wEAAf8B4AEP
        Af8B+AEAAQcB8AEAAfwBAAE4Af8BwQH/AQAB/wHgAQ8B/wHwAX8BgwHwAQABeAEAATkB/wGAAf8BAAH/
        AeABDwH/AeEB/wHhAfABAAEwAQABOQH/AcABfwEAAf8B4AEPAf8BwwH/AvADAAE5Af8B4AE/AQAB/wHg
        AQ8B/wHHAf8C+AMAAXkB/wHwAR8BAAH/AeABDwH/AY8B/wH8AXwDAAH5Af8B+AEfBAABAwGPAf8B/AF+
        AgABAQH5Af8B+AEPBAABAwEfAf8B/gE/AgABAwH5Af8B/AEfBAABAwEfAf8B/gE/AYABAAEHAfkB/wH+
        ASMEAAEDAR8B/wH+AT8BwAEAAQ8B+QL/AcMEAAEDAR8B/wH+AT8B4AEAAR8B+QL/AYMEAAEDAR8B/wH+
        AT8B4AEAAR8B+QL/AYMEAAEDAR8B/wH+AT8BwAEAAQ8B+QL/AecEAAEDAR8B/wH+AT8BgAEAAQcB+QP/
        BAABAwEfAf8B/gE/AgABAwH5A/8BAAH/AeABDwH/AY8C/wH+AgABAQH5A/8BAAH/AeABDwH/AY8C/wH8
        AwAB+AEPAf8BPwEAAf8B4AEPAf8BxwH/AcAB+AMAAXgBAwH/AT8BAAH/AeABDwH/AcMB/wHAAfADAAE8
        AQMB/wE/AQAB/wHgAQ8B/wHhAf8B4QHwAQABMAEAATwBAwH/AT8BAAH/AeABDwH/AfABfwGBAfABAAF4
        AQABPwEDAf8BPwEAAf8B4AEPAf8B+AEAAQEB8AEAAfwBAAE/AQMB/wE/AQAB/wHgAQ8B/wH+AQABHwHw
        AQEB/gEAAT8BwwH/AT8BAAH/AeABDwL/AYABfwHwAQMB/wEAAT8BwwH+AT8BAAH/AeABDwT/AfABBwH/
        AYABPwHwAQABfwEAAf8B4AEPBP8B+AEPAf8BwAF/AfgBAAH/AQAL
</value>
  </data>
</root>