<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABu
        DgAAAk1TRnQBSQFMAgEBBAEAATABAAEwAQABHgEAAR4BAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAF4
        AwABPAMAAQEBAAEgBQABgAFw/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A
        /wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A
        /wD/AP8A/wD/ALYAIP8DqwHwpAADAgEDAz8BbQNxAdUDwAH1A3gB2gNKAYsDDQESOAADEAEWA0oBjQOJ
        AeMDywH3A2wB0AM+AWoDAwEEPAAI/wNQAZtgACD/A6sB8KAAAwQBBQNZAbYU/wN7Ad0DFwEgMAADGgEk
        A4YB4hT/A1YBsAMBAQI4AAN9Ad8E/wPzAf5gACD/A6sB8FQAAwgBCwMrAUIDPgFrA0UBfwNFAX8DPgFr
        AysBQgMIAQssAANAAW8c/wN9Ad8DFwEgKAADGgElA4kB4xz/Az0BaRQAAwEBAgM6AWADOgFgAzoBYAM6
        AWADOgFgAzoBYAM6AWAEAAMjATMDTgGZDAADXgG/VAAg/wOrAfBMAAMoATwDUwGrAzAB9wMUAf8DFAH/
        AxQB/wMUAf8DFAH/AxQB/wMwAfcDUwGrAygBPCQAA3EB1SD/A34B3gMXASAgAAMZASMDiQHjIP8DawHR
        EAAk/xQACP8DBwEKUAAg/wOrAfBEAAMSARkDUwGuAxQB/wMkAfkDUwGwAzwBZgMlATcDFgEfAxcBIAMl
        ATcDPAFmA1MBsAMkAfkDFAH/A1MBrgMSARkcAAPbAfsk/wN9Ad8DFgEfGAADGQEjA4YB4iT/A7kB8wwA
        CP8DTgGUKwABARD/UAAg/wOrAfBAAAMlATcDSgHnAyAB/QNPAZsDFAEcIAADFAEcA08BmwMgAf0DSgHn
        AyUBNxgAA5AB5ij/A30B3wMXASAQAAMZASMDhgHiKP8DdAHZDAAE/wPAAfUoAAM1AVUY/0wAIP8DqwHw
        PAADJQE3AzkB8gM+Ae4DLgFHMAADLgFHAz4B7gM5AfIDJQE3FAADTAGQLP8DfgHeAxcBIAgAAxkBIwOG
        AeIs/wNKAYoMAAT/A0oBiiwAHP9IACD/A6sB8DgAAxIBGQNKAecDPgHuAyABLzgAAyABLwM+Ae4DSgHn
        AxIBGRAAAxEBFwOJAeMs/wN9Ad8DFwEgAxkBIwOGAeIs/wN+Ad4DDQESDAAE/wNKAYowABj/A3AB1EQA
        IP8DqwHwOAADUwGuAyAB/QMuAUdAAAMuAUcDIAH9A1MBrhQAAxoBJQOJAeMs/wN9Ad8DhgHiLP8DgwHg
        AxgBIRAABP8DSgGKNAAY/wMOARNAACD/A6sB8DQAAygBPAMUAf8DTwGbSAADTwGbAxQB/wMoATwUAAMa
        ASUDiQHjWP8DgwHgAxgBIRQABP8DSgGKOAAY/xQAA0MBdwOrAfADqwHwA6sB8AOrAfADqwHwA6sB8AOr
        AfADqwHwA6sB8AOrAfAg/wPzAf4DqwHwA6sB8AOrAfADqwHwA6sB8AOrAfADqwHwA6sB8AOrAfADqwHw
        DAADUwGrAyQB+QMUARxIAAMUARwDJAH5A1MBqxgAAxoBJQOJAeNQ/wODAeADGAEhGAAE/wNKAYo4AANA
        AW8Y/xAAA0YBfnT/CAADCAELAzAB9wNTAbBQAANTAbADMAH3AwgBCxgAAxoBJQOJAeNI/wODAeADGAEh
        HAAE/wNKAYo8AAPhAfwM/wNYAbMUAANGAX50/wgAAysBQgMUAf8DPAFmUAADPAFmAxQB/wMrAUIcAAMa
        ASUDiQHjQP8DgwHgAxgBISAABP8DSgGKQAAI/wMEAQUEAAM+AWsE/wPhAfwIAANGAX50/wgAAz4BawMU
        Af8DJQE3UAADJQE3AxQB/wM+AWsgAAMaASUDiQHjOP8DgwHgAxgBISQABP8DSgGKTAAD4AH8DP8IAANG
        AX50/wgAA0UBfwMUAf8DFwEgUAADFwEgAxQB/wNFAX8kAAMaASUDiQHjMP8DgwHgAxgBISgABP8DSgGK
        SAAU/wgAA0YBfnT/CAADRQF/AxQB/wMXASBQAAMXASADFAH/A0UBfyQAAxkBIwOGAeIw/wN9Ad8DFgEf
        KAAE/wNKAYpIAAMWAR8Q/wgAA0YBfnT/CAADPgFrAxQB/wMlATdQAAMlATcDFAH/Az0BaiAAAxkBIwOG
        AeI4/wN9Ad8DFwEgJAAE/wNKAYpQAAOlAe4DBwEKDAADRgF+dP8IAAMrAUIDFAH/AzwBZlAAAzsBZQMU
        Af8DKgFBHAADGQEjA4YB4kD/A34B3gMXASAgAAT/A0oBimQAA0YBfnT/CAADCAELAzAB9wNTAbBQAAMr
        AUIDVgG4AwcBChgAAxkBIwOGAeJI/wN9Ad8DFwEgHAAE/wNKAYqQACD/A6sB8DQAA1MBqwMkAfkDFAEc
        bAADGQEjA4YB4lD/A34B3gMXASAYAAT/A0oBipAAIP8DqwHwNAADKAE8AxQB/wNPAZtoAAMZASMDhgHi
        WP8DgwHgAxgBIRQABP8DUQGfAx8BLQMfAS0DHwEtAx8BLQMfAS0wAANKAYwE/0QAIP8DqwHwOAADUwGu
        AyAB/QMuAUc0AAMCAQMDFgEeAygBPAM3AVsDQwF4AxYBHxQAAxkBIwOGAeIs/wODAeADiQHjLP8DgwHg
        AxgBIRAAIP8DEAEVKAADSgGMBP9EACD/A6sB8DgAAxIBGQNKAecDPgHuAyABLzAAAwYBCANYAcgDFAH/
        AxQB/wM5AfIDBgEIEAADEAEVA4QB4Sz/A4MB4AMYASEDGgElA4kB4yz/A30B3wMPARQQACD/KAADSgGM
        BP9EACD/A6sB8DwAAyUBNwM5AfIDPgHuAy4BRzAAAzoBYgMUAf8DFAH/A1MBqxQAA0wBkCz/A4MB4AMY
        ASEIAAMaASQDiQHjLP8DSQGIEAADAwEEHP8oAANKAYwE/0QAIP8DqwHwQAADJQE3A0oB5wMgAf0DTwGb
        AxQBHCAAAxUBHQNQAZ0DGgH+A0kB6AMoAfgDOAFcFAADfQHfKP8DgwHgAxgBIRAAAxoBJQOJAeMo/wOD
        AeAYABj/KAADSgGMBP9EACD/A6sB8EQAAxIBGQNTAa4DFAH/AyQB+QNTAbADPAFmAyUBNwMXASADFwEg
        AyUBNwM8AWcDVQGxAyEB+gMUAf8DUwGsAxIBGAM6AWEDDQESFAAD1QH5JP8DgwHgAxgBIRgAAxoBJQOJ
        AeMk/wO9AfQYAAMDAQQU/ygAA0oBjAT/RAAg/wOrAfBMAAMoATwDUwGrAzAB9wMUAf8DFAH/AxQB/wMU
        Af8DFAH/AxQB/wMvAfYDUgGqAycBOiQAA3MB2CD/A4MB4AMYASEgAAMaASUDiQHjIP8DbAHPIAAQ/ygA
        A3gB2gT/RAAg/wOrAfBUAAMIAQsDKwFCAz4BawNFAX8DRQF/Az4BawMqAUEDBwEKLAADQAFwHP8DgwHg
        AxgBISgAAxoBJQOJAeMc/wM+AWogAAMCAQMM/yQAAxQBGwj/RAAg/wOrAfCgAAMDAQQDWgG3FP8DfQHf
        AxgBITAAAxoBJQOGAeIU/wNZAbIDAwEEKAA0/0gAA0YBfgNGAX4DRgF+A0YBfgNGAX4DRgF+A0YBfgNG
        AX4DQwF3pAADBAEGA0ABbwNwAdQD0QH4A4kB4wNKAYsDEAEVOAADEAEVA0wBjwN7Ad0DywH3A3AB1AM/
        AWwDAgEDMAAo/wMZASMgAAFCAU0BPgcAAT4DAAEoAwABeAMAATwDAAEBAQABAQUAAcABAxYAA///AOIA
        Af8B4AEPBP8B+AEPAf8BwAF/Af8BHwH/AQAB/wHgAQ8E/wHwAQcB/wGAAT8B/wEfAf8BAAH/AeABDwL/
        AYABfwHwAQMB/wEAAT4BAQE7Af8BAAH/AeABDwH/Af4BAAEfAfABAQH+AQABPAEBAfEB/wEAAf8B4AEP
        Af8B+AEAAQcB8AEAAfwBAAE4Af8BwQH/AQAB/wHgAQ8B/wHwAX8BgwHwAQABeAEAATkB/wGAAf8BAAH/
        AeABDwH/AeEB/wHhAfABAAEwAQABOQH/AcABfwEAAf8B4AEPAf8BwwH/AvADAAE5Af8B4AE/AQAB/wHg
        AQ8B/wHHAf8C+AMAAXkB/wHwAR8BAAH/AeABDwH/AY8B/wH8AXwDAAH5Af8B+AEfBAABAwGPAf8B/AF+
        AgABAQH5Af8B+AEPBAABAwEfAf8B/gE/AgABAwH5Af8B/AEfBAABAwEfAf8B/gE/AYABAAEHAfkB/wH+
        ASMEAAEDAR8B/wH+AT8BwAEAAQ8B+QL/AcMEAAEDAR8B/wH+AT8B4AEAAR8B+QL/AYMEAAEDAR8B/wH+
        AT8B4AEAAR8B+QL/AYMEAAEDAR8B/wH+AT8BwAEAAQ8B+QL/AecEAAEDAR8B/wH+AT8BgAEAAQcB+QP/
        BAABAwEfAf8B/gE/AgABAwH5A/8BAAH/AeABDwH/AY8C/wH+AgABAQH5A/8BAAH/AeABDwH/AY8C/wH8
        AwAB+AEPAf8BPwEAAf8B4AEPAf8BxwH/AcAB+AMAAXgBAwH/AT8BAAH/AeABDwH/AcMB/wHAAfADAAE8
        AQMB/wE/AQAB/wHgAQ8B/wHhAf8B4QHwAQABMAEAATwBAwH/AT8BAAH/AeABDwH/AfABfwGBAfABAAF4
        AQABPwEDAf8BPwEAAf8B4AEPAf8B+AEAAQEB8AEAAfwBAAE/AQMB/wE/AQAB/wHgAQ8B/wH+AQABHwHw
        AQEB/gEAAT8BwwH/AT8BAAH/AeABDwL/AYABfwHwAQMB/wEAAT8BwwH+AT8BAAH/AeABDwT/AfABBwH/
        AYABPwHwAQABfwEAAf8B4AEPBP8B+AEPAf8BwAF/AfgBAAH/AQAL
</value>
  </data>
</root>