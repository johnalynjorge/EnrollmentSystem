<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABu
        DgAAAk1TRnQBSQFMAgEBBAEAASgBAAEoAQABHgEAAR4BAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAF4
        AwABPAMAAQEBAAEgBQABgAFw/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A
        /wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A
        /wD/AP8A/wD/ALYAIP8DtgHwpAADAgEDAz8BbQN5AdUDyQH1A4IB2gNKAYsDDQESOAADEAEWA0oBjQOT
        AeMD0wH3A3MB0AM+AWoDAwEEPAAI/wNRAZtgACD/A7YB8KAAAwQBBQNdAbYU/wOFAd0DFwEgMAADGgEk
        A48B4hT/A1gBsAMBAQI4AAOHAd8E/wP1Af5gACD/A7YB8FQAAwgBCwMrAUIDPgFrA0UBfwNFAX8DPgFr
        AysBQgMIAQssAANAAW8c/wOHAd8DFwEgKAADGgElA5MB4xz/Az0BaRQAAwEBAgM6AWADOgFgAzoBYAM6
        AWADOgFgAzoBYAM6AWAEAAMjATMDUAGZDAADYwG/VAAg/wO2AfBMAAMoATwDUgGrAywB9wMVAf8DFQH/
        AxUB/wMVAf8DFQH/AxUB/wMsAfcDUgGrAygBPCQAA3kB1SD/A4cB3gMXASAgAAMZASMDkwHjIP8DcwHR
        EAAk/xQACP8DBwEKUAAg/wO2AfBEAAMSARkDUgGuAxUB/wMjAfkDUgGwAzwBZgMlATcDFgEfAxcBIAMl
        ATcDPAFmA1IBsAMjAfkDFQH/A1IBrgMSARkcAAPhAfsk/wOHAd8DFgEfGAADGQEjA48B4iT/A8EB8wwA
        CP8DTgGUKwABARD/UAAg/wO2AfBAAAMlATcDRgHnAx8B/QNPAZsDFAEcIAADFAEcA08BmwMfAf0DRgHn
        AyUBNxgAA5oB5ij/A4cB3wMXASAQAAMZASMDjwHiKP8DfgHZDAAE/wPJAfUoAAM1AVUY/0wAIP8DtgHw
        PAADJQE3AzYB8gM6Ae4DLgFHMAADLgFHAzoB7gM2AfIDJQE3FAADTAGQLP8DhwHeAxcBIAgAAxkBIwOP
        AeIs/wNKAYoMAAT/A0oBiiwAHP9IACD/A7YB8DgAAxIBGQNGAecDOgHuAyABLzgAAyABLwM6Ae4DRgHn
        AxIBGRAAAxEBFwOTAeMs/wOHAd8DFwEgAxkBIwOPAeIs/wOHAd4DDQESDAAE/wNKAYowABj/A3cB1EQA
        IP8DtgHwOAADUgGuAx8B/QMuAUdAAAMuAUcDHwH9A1IBrhQAAxoBJQOTAeMs/wOHAd8DjwHiLP8DjAHg
        AxgBIRAABP8DSgGKNAAY/wMOARNAACD/A7YB8DQAAygBPAMVAf8DTwGbSAADTwGbAxUB/wMoATwUAAMa
        ASUDkwHjWP8DjAHgAxgBIRQABP8DSgGKOAAY/xQAA0MBdwO2AfADtgHwA7YB8AO2AfADtgHwA7YB8AO2
        AfADtgHwA7YB8AO2AfAg/wP1Af4DtgHwA7YB8AO2AfADtgHwA7YB8AO2AfADtgHwA7YB8AO2AfADtgHw
        DAADUgGrAyMB+QMUARxIAAMUARwDIwH5A1IBqxgAAxoBJQOTAeNQ/wOMAeADGAEhGAAE/wNKAYo4AANA
        AW8Y/xAAA0YBfnT/CAADCAELAywB9wNSAbBQAANSAbADLAH3AwgBCxgAAxoBJQOTAeNI/wOMAeADGAEh
        HAAE/wNKAYo8AAPmAfwM/wNbAbMUAANGAX50/wgAAysBQgMVAf8DPAFmUAADPAFmAxUB/wMrAUIcAAMa
        ASUDkwHjQP8DjAHgAxgBISAABP8DSgGKQAAI/wMEAQUEAAM+AWsE/wPmAfwIAANGAX50/wgAAz4BawMV
        Af8DJQE3UAADJQE3AxUB/wM+AWsgAAMaASUDkwHjOP8DjAHgAxgBISQABP8DSgGKTAAD5QH8DP8IAANG
        AX50/wgAA0UBfwMVAf8DFwEgUAADFwEgAxUB/wNFAX8kAAMaASUDkwHjMP8DjAHgAxgBISgABP8DSgGK
        SAAU/wgAA0YBfnT/CAADRQF/AxUB/wMXASBQAAMXASADFQH/A0UBfyQAAxkBIwOPAeIw/wOHAd8DFgEf
        KAAE/wNKAYpIAAMWAR8Q/wgAA0YBfnT/CAADPgFrAxUB/wMlATdQAAMlATcDFQH/Az0BaiAAAxkBIwOP
        AeI4/wOHAd8DFwEgJAAE/wNKAYpQAAOwAe4DBwEKDAADRgF+dP8IAAMrAUIDFQH/AzwBZlAAAzsBZQMV
        Af8DKgFBHAADGQEjA48B4kD/A4cB3gMXASAgAAT/A0oBimQAA0YBfnT/CAADCAELAywB9wNSAbBQAAMr
        AUIDVAG4AwcBChgAAxkBIwOPAeJI/wOHAd8DFwEgHAAE/wNKAYqQACD/A7YB8DQAA1IBqwMjAfkDFAEc
        bAADGQEjA48B4lD/A4cB3gMXASAYAAT/A0oBipAAIP8DtgHwNAADKAE8AxUB/wNPAZtoAAMZASMDjwHi
        WP8DjAHgAxgBIRQABP8DUQGfAx8BLQMfAS0DHwEtAx8BLQMfAS0wAANLAYwE/0QAIP8DtgHwOAADUgGu
        Ax8B/QMuAUc0AAMCAQMDFgEeAygBPAM3AVsDQwF4AxYBHxQAAxkBIwOPAeIs/wOMAeADkwHjLP8DjAHg
        AxgBIRAAIP8DEAEVKAADSwGMBP9EACD/A7YB8DgAAxIBGQNGAecDOgHuAyABLzAAAwYBCANVAcgDFQH/
        AxUB/wM2AfIDBgEIEAADEAEVA48B4Sz/A4wB4AMYASEDGgElA5MB4yz/A4cB3wMPARQQACD/KAADSwGM
        BP9EACD/A7YB8DwAAyUBNwM2AfIDOgHuAy4BRzAAAzoBYgMVAf8DFQH/A1IBqxQAA0wBkCz/A4wB4AMY
        ASEIAAMaASQDkwHjLP8DSQGIEAADAwEEHP8oAANLAYwE/0QAIP8DtgHwQAADJQE3A0YB5wMfAf0DTwGb
        AxQBHCAAAxUBHQNQAZ0DGgH+A0QB6AMlAfgDOAFcFAADhwHfKP8DjAHgAxgBIRAAAxoBJQOTAeMo/wOM
        AeAYABj/KAADSwGMBP9EACD/A7YB8EQAAxIBGQNSAa4DFQH/AyMB+QNSAbADPAFmAyUBNwMXASADFwEg
        AyUBNwM8AWcDUwGxAyAB+gMVAf8DUwGsAxIBGAM6AWEDDQESFAAD2wH5JP8DjAHgAxgBIRgAAxoBJQOT
        AeMk/wPFAfQYAAMDAQQU/ygAA0sBjAT/RAAg/wO2AfBMAAMoATwDUgGrAywB9wMVAf8DFQH/AxUB/wMV
        Af8DFQH/AxUB/wMtAfYDUQGqAycBOiQAA3wB2CD/A4wB4AMYASEgAAMaASUDkwHjIP8DcgHPIAAQ/ygA
        A4IB2gT/RAAg/wO2AfBUAAMIAQsDKwFCAz4BawNFAX8DRQF/Az4BawMqAUEDBwEKLAADQAFwHP8DjAHg
        AxgBISgAAxoBJQOTAeMc/wM+AWogAAMCAQMM/yQAAxQBGwj/RAAg/wO2AfCgAAMDAQQDXwG3FP8DhwHf
        AxgBITAAAxoBJQOPAeIU/wNbAbIDAwEEKAA0/0gAA0YBfgNGAX4DRgF+A0YBfgNGAX4DRgF+A0YBfgNG
        AX4DQwF3pAADBAEGA0ABbwN3AdQD2AH4A5MB4wNKAYsDEAEVOAADEAEVA0wBjwOFAd0D0wH3A3cB1AM/
        AWwDAgEDMAAo/wMZASMgAAFCAU0BPgcAAT4DAAEoAwABeAMAATwDAAEBAQABAQUAAcABAxYAA///AOIA
        Af8B4AEPBP8B+AEPAf8BwAF/Af8BHwH/AQAB/wHgAQ8E/wHwAQcB/wGAAT8B/wEfAf8BAAH/AeABDwL/
        AYABfwHwAQMB/wEAAT4BAQE7Af8BAAH/AeABDwH/Af4BAAEfAfABAQH+AQABPAEBAfEB/wEAAf8B4AEP
        Af8B+AEAAQcB8AEAAfwBAAE4Af8BwQH/AQAB/wHgAQ8B/wHwAX8BgwHwAQABeAEAATkB/wGAAf8BAAH/
        AeABDwH/AeEB/wHhAfABAAEwAQABOQH/AcABfwEAAf8B4AEPAf8BwwH/AvADAAE5Af8B4AE/AQAB/wHg
        AQ8B/wHHAf8C+AMAAXkB/wHwAR8BAAH/AeABDwH/AY8B/wH8AXwDAAH5Af8B+AEfBAABAwGPAf8B/AF+
        AgABAQH5Af8B+AEPBAABAwEfAf8B/gE/AgABAwH5Af8B/AEfBAABAwEfAf8B/gE/AYABAAEHAfkB/wH+
        ASMEAAEDAR8B/wH+AT8BwAEAAQ8B+QL/AcMEAAEDAR8B/wH+AT8B4AEAAR8B+QL/AYMEAAEDAR8B/wH+
        AT8B4AEAAR8B+QL/AYMEAAEDAR8B/wH+AT8BwAEAAQ8B+QL/AecEAAEDAR8B/wH+AT8BgAEAAQcB+QP/
        BAABAwEfAf8B/gE/AgABAwH5A/8BAAH/AeABDwH/AY8C/wH+AgABAQH5A/8BAAH/AeABDwH/AY8C/wH8
        AwAB+AEPAf8BPwEAAf8B4AEPAf8BxwH/AcAB+AMAAXgBAwH/AT8BAAH/AeABDwH/AcMB/wHAAfADAAE8
        AQMB/wE/AQAB/wHgAQ8B/wHhAf8B4QHwAQABMAEAATwBAwH/AT8BAAH/AeABDwH/AfABfwGBAfABAAF4
        AQABPwEDAf8BPwEAAf8B4AEPAf8B+AEAAQEB8AEAAfwBAAE/AQMB/wE/AQAB/wHgAQ8B/wH+AQABHwHw
        AQEB/gEAAT8BwwH/AT8BAAH/AeABDwL/AYABfwHwAQMB/wEAAT8BwwH+AT8BAAH/AeABDwT/AfABBwH/
        AYABPwHwAQABfwEAAf8B4AEPBP8B+AEPAf8BwAF/AfgBAAH/AQAL
</value>
  </data>
</root>